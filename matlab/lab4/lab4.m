%%
clc
clear
disp('--------------------------Задание 1--------------------------')
A = [-0.76, -0.04, 0.21, -0.18; 0.45, -1.23, 0.66, 0; 0.26, 0.34, -1.11, 0; 0.05, -0.26, 0.34, -1.12];
B = [-1.24; 0.88; -0.63; 1.17];
disp('A:'); disp(A);
disp('B:'); disp(B);
eps = 1e-7;
disp('Точность решения:'); disp(eps);
disp("Решение с помощью linsolve:"); disp(linsolve(A,B));
disp('--------------------Метод Простых Итераций-------------------');
%Приведение к матричному виду
for i = 1:size(A) 
    C(i,:) = -A(i,:)/A(i,i);
    C(i,i) = 0;
    d(i,1) = B(i,:)/A(i,i);
end
Iter = [C d];%Итерационная форма
%Проверка сходимости метода
disp('(Достаточное условие сходимости)Норма матрицы C < 1:'); disp(norm(C));
if norm(C)<1
    X0 = d; 
    X1 = C*X0+d;
    count=0;
    while abs(X1-X0)>eps
        X0 = X1;
        X1 = C*X0+d;
        count=count+1;   
    end
    X = X1;
    disp('Решение Методом Простых Итераций: X:'); disp(X);
    disp('Проверка результатов:');
    disp('Сравним A*X=B:');
    disp('A*X'); disp(A*X);
    disp('B'); disp(B);
    disp('Точность вычислений A*X-B:'); 
    disp(A*X-B);
    disp('Количество итераций:');
    disp(count);
else
    disp("Условие не выполняется");
end
disp('-----------------------Метод Зейделя------------------------');
count=0;
D=diag(diag(A));%диагональ
L=tril(A)-D;%верхняя диагональ
U=triu(A)-D;%нижняя диагональ
uprev=zeros(rank(A),1);

%Проверка сходимости метода
disp('(Достаточное условие сходимости)Норма матрицы C < 1:');
disp(norm(C));

if norm(C)<1 % Проверка дост. условия сходимости
  u=-(L+D)^-1*U*uprev+(L+D)^-1*B;
  count=count+1;
  while abs(uprev-u)>eps
    uprev=u;
    u=-(L+D)^-1*U*uprev+(L+D)^-1*B;
    count=count+1;
  end
    disp('Решение методом простых итераций:');
    disp('u:'); disp(u);
    disp('Проверка результатов:');
    disp('Сравним A*u=B:');
    disp('A*u'); disp(A*u);
    disp('B'); disp(B);
    disp('Точность вычислений A*u-B:'); 
    disp(A*u-B);
    disp('Количество итераций:');
    disp(count);
else
  disp("Условие не выполняется");
end

%%
clear
clc
disp('--------------------------Задание 2--------------------------')
A=[ 2 1 4 1;
    3 0 1 1;
   -1 2 3 4;
    3 1 1 1];
disp('A:'); disp(A);
%Найти собственные значения и собственные вектора матрицы А:
[V,D] = eig(A);
disp('V-собственные вектора матрицы А');
disp(V);
disp('D-собственные значения матрицы А на главной диагонали матрицы D');
disp(D);
disp('Проверка A*V=V*D:');
disp('A*V'); disp(A*V);
disp('V*D'); disp(V*D);
disp('Точность вычислений A*V-V*D:'); 
disp(A*V-V*D);
%eig выполняет разложение с помощью вычислений с плавающей точкой. 
%А*V может только приблизится к V*D. А*V-V*D близко к 0
%%
clc
clear
disp('--------------------------Задание 3--------------------------')
%Исходная система
%A=[ 8  4 -6  0; 1  2  1 -6; -3 -6 -2 -9; 4  3  2  1];
%B=[596; 262.02; -731.47; 396.83];
%Преобразованная система(для выполнения условия сходимости)
A=[ 8  4 -6  0; 4  8  3  3; -4 -1  8  1; -3 -6 -2 -9];
B=[596; 993.49; -199.17; -731.47];
disp('A:'); disp(A);
disp('B:'); disp(B);
eps = 1e-7;%точность решения
disp('Точность решения:'); disp(eps);
disp('det(A)'); disp(det(A));
disp('rank(A)'); disp(rank(A));
disp('norm(A)'); disp(norm(A));
disp('cond(A)'); disp(cond(A));
disp('--------------------------------------------------------------');
disp("Решение с помощью linsolve:");
disp(linsolve(A,B));

%Приведение к матричному виду
for i = 1:size(A) 
    C(i,:) = -A(i,:)/A(i,i);
    C(i,i) = 0;
    d(i,1) = B(i,:)/A(i,i);
end
%Итерационная форма
Iter = [C d];

disp('--------------------Метод Простых Итераций--------------------');
%Проверка сходимости метода
disp('(Достаточное условие сходимости)Норма матрицы C < 1:');
disp(norm(C));
%Решение
if norm(C)<1
    X0 = d; 
    X1 = C*X0+d;
    count=0;
    while abs(X1-X0)>eps
        X0 = X1;
        X1 = C*X0+d;
        count=count+1;   
    end
    X = X1;
    disp('Решение методом простых итераций:');
    disp('X:'); disp(X);
    disp('Проверка результатов:');
    disp('Сравним A*X=B:');
    disp('A*X'); disp(A*X);
    disp('B'); disp(B);
    disp('Точность вычислений A*X-B:'); 
    disp(A*X-B);
    disp('Количество итераций:');
    disp(count);
else
    disp("Условие не выполняется");
end

disp('-----------------------Метод Зейделя------------------------');
count=0;
D=diag(diag(A));%диагональ
L=tril(A)-D;%верхняя диагональ
U=triu(A)-D;%нижняя диагональ
uprev=zeros(rank(A),1);

%Проверка сходимости метода
disp('(Достаточное условие сходимости)Норма матрицы C < 1:');
disp(norm(C));

if norm(C)<1 % Проверка дост. условия сходимости
  u=-(L+D)^-1*U*uprev+(L+D)^-1*B;
  count=count+1;
  while abs(uprev-u)>eps
    uprev=u;
    u=-(L+D)^-1*U*uprev+(L+D)^-1*B;
    count=count+1;
  end
    disp('Решение методом простых итераций:');
    disp('u:'); disp(u);
    disp('Проверка результатов:');
    disp('Сравним A*u=B:');
    disp('A*u'); disp(A*u);
    disp('B'); disp(B);
    disp('Точность вычислений A*u-B:'); 
    disp(A*u-B);
    disp('Количество итераций:');
    disp(count);
else
  disp("Условие не выполняется");
end

disp('-----------------------Метод Якоби------------------------');

count=0;
D=diag(diag(A));%диагональ
L=tril(A)-D;%верхняя диагональ
U=triu(A)-D;%нижняя диагональ
uprev=zeros(rank(A),1);

if norm(C)<1 % Проверка дост. условия сходимости
    u=-D^-1*(L+U)*uprev+D^-1*B;
    count=count+1;
    while abs(uprev-u)>eps
        uprev=u;
        u=-D^-1*(L+U)*uprev+D^-1*B;
        count=count+1;
    end
    disp('Решение методом простых итераций:');
    disp('u:'); disp(u);
    disp('Проверка результатов:');
    disp('Сравним A*u=B:');
    disp('A*u'); disp(A*u);
    disp('B'); disp(B);
    disp('Точность вычислений A*u-B:'); 
    disp(A*u-B);
    disp('Количество итераций:');
    disp(count);
else
    disp("Условие не выполняется");
end

disp('------------------------------------------------------------');
%%